@model Mvc3Examples.Models.StudentViewModel

@{
    ViewBag.Title = "Custom";
}

<h2>Custom Example</h2>


<p>This example generates HTML form that maps the model attributes to Label, Editor, and ValidationMessage methods.
    <pre class="prettyprint">
        Html.EditorFor(model => model.Grade) resolves to @Html.Encode(@Html.EditorFor(m => m.Grade))
    </pre>
</p>

<p>This example illustrates Custom validation.  We first created a custom attribute that extends ValidationAttribute:
    <pre class="prettyprint">
        
namespace Mvc3Examples.Helpers.Attributes
{
    public class GradeRangeAttribute : ValidationAttribute
    {
        private readonly IEnumerable<String> _range;
        /**
         * we allow a range of grades - comma separated
         */
        public GradeRangeAttribute(String range) : base("{0} is out of range")
        {
            _range = range != null ? range.Split(',').AsEnumerable<String>() : new List<String>();
        }

        /**
         * this method must be overwritten with custom valid logic
         */
        protected override ValidationResult IsValid(object value, ValidationContext validationContext)
        {
            //could be not required so check that the value is passed in first
            if (value != null)
            {
                var valueAsString = value.ToString();
                if(_range == null || !_range.Contains(valueAsString))
                {
                    //value is not in range of allowed grades.  error!
                    var errorMessage = FormatErrorMessage(
                        validationContext.DisplayName);
                    return new ValidationResult(errorMessage);
                }
            }
            //we passed!  success!
            return ValidationResult.Success;
       
        }
    }
}
    </pre>

    We then assigned it to Grade property.  When a value is entered into the Grade textbox, the validation checks whether the entered grade fell into the proper list.

    The grade range attribute is set like this:
    <pre class="prettyprint">
        [GradeRange("A,B,C,D,F", ErrorMessage="not a valid grade")]
        public String Grade { get; set; }
    </pre>
</p>

@Html.Partial("StudentViewModel", Model)